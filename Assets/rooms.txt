Room: AnotherClass
	Machines:
		- AnotherClass.Awake()
			Inputs:
			Outputs:
				<--- AnotherClass.SomeMethod(int)
		- AnotherClass.SomeMethod(int)
			Inputs:
				---> AnotherClass.Awake()
			Outputs:
		- AnotherClass.SomeVirtualMethod()
			Inputs:
				---> YetAnotherClass.SomeVirtualMethod()
			Outputs:
		- AnotherClass.SomeProtectedMethod()
			Inputs:
				---> YetAnotherClass.SomeVirtualMethod()
			Outputs:
-----------------------------------------------------------
Room: YetAnotherClass
	Machines:
		- YetAnotherClass.SomeVirtualMethod()
			Inputs:
			Outputs:
				<--- AnotherClass.SomeVirtualMethod()
				<--- AnotherClass.SomeProtectedMethod()
				<--- YetAnotherClass.NestedClass.num
				<--- YetAnotherClass.NestedClass.NestedClass()
-----------------------------------------------------------
Room: YetAnotherClass.NestedClass
	Machines:
		- YetAnotherClass.NestedClass.num
			Inputs:
				---> YetAnotherClass.NestedClass.NestedClass()
				---> YetAnotherClass.SomeVirtualMethod()
			Outputs:
		- YetAnotherClass.NestedClass.NestedClass()
			Inputs:
				---> YetAnotherClass.SomeVirtualMethod()
			Outputs:
				<--- YetAnotherClass.NestedClass.num
-----------------------------------------------------------
Room: LineGridMask
	Machines:
		- LineGridMask.ShouldMaskPoint(Vector2Int)
			Inputs:
				---> Main.Start()
			Outputs:
				<--- LineGridMask.startCoord
				<--- LineGridMask.endCoord
				<--- LineGridMask.distanceBetweenInitialPoints
				<--- LineGridMask.POINT_DISTANCE_THRESHOLD
		- LineGridMask.startCoord
			Inputs:
				---> LineGridMask.LineGridMask(Vector2Int, Vector2Int)
				---> LineGridMask.ShouldMaskPoint(Vector2Int)
			Outputs:
		- LineGridMask.endCoord
			Inputs:
				---> LineGridMask.LineGridMask(Vector2Int, Vector2Int)
				---> LineGridMask.ShouldMaskPoint(Vector2Int)
			Outputs:
		- LineGridMask.distanceBetweenInitialPoints
			Inputs:
				---> LineGridMask.LineGridMask(Vector2Int, Vector2Int)
				---> LineGridMask.ShouldMaskPoint(Vector2Int)
			Outputs:
		- LineGridMask.POINT_DISTANCE_THRESHOLD
			Inputs:
				---> LineGridMask.ShouldMaskPoint(Vector2Int)
			Outputs:
		- LineGridMask.LineGridMask(Vector2Int, Vector2Int)
			Inputs:
				---> Main.Start()
			Outputs:
				<--- LineGridMask.startCoord
				<--- LineGridMask.endCoord
				<--- LineGridMask.distanceBetweenInitialPoints
-----------------------------------------------------------
Room: LineGridMask.NestedClass
	Machines:
		- LineGridMask.NestedClass.num
			Inputs:
				---> LineGridMask.NestedClass.NestedClass()
				---> Main.Test()
			Outputs:
		- LineGridMask.NestedClass.NestedClass()
			Inputs:
				---> Main.Start()
			Outputs:
				<--- LineGridMask.NestedClass.num
-----------------------------------------------------------
Room: Main
	Machines:
		- Main.Start()
			Inputs:
			Outputs:
				<--- LineGridMask.ShouldMaskPoint(Vector2Int)
				<--- Main.Test()
				<--- LineGridMask.LineGridMask(Vector2Int, Vector2Int)
				<--- Main.nestedClass
				<--- LineGridMask.NestedClass.NestedClass()
		- Main.Test()
			Inputs:
				---> Main.Start()
			Outputs:
				<--- LineGridMask.NestedClass.num
				<--- Main.nestedClass
				<--- Main.testFloat
		- Main.nestedClass
			Inputs:
				---> Main.Start()
				---> Main.Test()
			Outputs:
		- Main.testFloat
			Inputs:
				---> Main.Test()
			Outputs:
-----------------------------------------------------------
Room: IGridMask
	Machines:
		- IGridMask.ShouldMaskPoint(Vector2Int)
			Inputs:
			Outputs:
-----------------------------------------------------------
